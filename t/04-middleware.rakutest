use v6;
use lib 'lib';

use Test;

use Humming-Bird::Core;
use Humming-Bird::Middleware;

plan 5;

get('/', -> $request, $response {
  $response.html('Hello World!');
}, [ &middleware-logger ]);

is routes{'/'}{GET}.middlewares[0].raku, &middleware-logger.raku, 'Is middleware properly assigned?';
is routes{'/'}{GET}.middlewares[0].elems, 1, 'Is proper number of middleware inside of route?';

group((
  &get.assuming('/hello', -> $request, $response {
    $response.html('Hello!');
  }),
  &get.assuming('/hello/world', -> $request, $response {
    $response.html('Hello World!');
  })
), [ &middleware-logger ]);

is routes{'/'}{'hello'}{GET}.middlewares[0].raku, &middleware-logger.raku, 'Is middleware of group properly assigned?';
is routes{'/'}{'hello'}{'world'}{GET}.middlewares[0].raku, &middleware-logger.raku, 'Is middleware of group properly assigned?';

middleware(-> $request, $response, &next { $response.html('Foo Bar') });
get('/foobar', -> $request, $response { $response.write('YOU CANT SEE ME') });
my $simple_request = Request.decode: "GET /foobar HTTP/1.1\r\nHost: bob.com\r\n";
is routes{'/'}{'foobar'}{GET}($simple_request).body, 'Foo Bar', 'Is global middleware OK?';

done-testing;
